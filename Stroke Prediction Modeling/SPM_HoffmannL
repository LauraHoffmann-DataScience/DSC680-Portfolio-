{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Course: DSC550\n",
    "## Assignment: 11.2 Project Milestone 5\n",
    "## Name: Laura Hoffmann\n",
    "## Date: 5/30/2021\n",
    "\n",
    "#### Import the Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: yellowbrick in c:\\users\\laura\\anaconda3\\lib\\site-packages (1.4)\n",
      "Requirement already satisfied: numpy>=1.16.0 in c:\\users\\laura\\anaconda3\\lib\\site-packages (from yellowbrick) (1.20.1)\n",
      "Requirement already satisfied: matplotlib!=3.0.0,>=2.0.2 in c:\\users\\laura\\anaconda3\\lib\\site-packages (from yellowbrick) (3.3.4)\n",
      "Requirement already satisfied: cycler>=0.10.0 in c:\\users\\laura\\anaconda3\\lib\\site-packages (from yellowbrick) (0.10.0)\n",
      "Requirement already satisfied: scikit-learn>=1.0.0 in c:\\users\\laura\\anaconda3\\lib\\site-packages (from yellowbrick) (1.0.2)\n",
      "Requirement already satisfied: scipy>=1.0.0 in c:\\users\\laura\\anaconda3\\lib\\site-packages (from yellowbrick) (1.6.2)\n",
      "Requirement already satisfied: six in c:\\users\\laura\\anaconda3\\lib\\site-packages (from cycler>=0.10.0->yellowbrick) (1.15.0)\n",
      "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.3 in c:\\users\\laura\\anaconda3\\lib\\site-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (2.4.7)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in c:\\users\\laura\\anaconda3\\lib\\site-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (1.3.1)\n",
      "Requirement already satisfied: python-dateutil>=2.1 in c:\\users\\laura\\anaconda3\\lib\\site-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (2.8.1)\n",
      "Requirement already satisfied: pillow>=6.2.0 in c:\\users\\laura\\anaconda3\\lib\\site-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (8.2.0)\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in c:\\users\\laura\\anaconda3\\lib\\site-packages (from scikit-learn>=1.0.0->yellowbrick) (2.1.0)\n",
      "Requirement already satisfied: joblib>=0.11 in c:\\users\\laura\\anaconda3\\lib\\site-packages (from scikit-learn>=1.0.0->yellowbrick) (1.0.1)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install yellowbrick"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "from sklearn.preprocessing import OrdinalEncoder\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "# Milestone 3/4\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from yellowbrick.classifier import ConfusionMatrix\n",
    "from yellowbrick.classifier import ClassificationReport\n",
    "from sklearn import tree\n",
    "from sklearn import metrics\n",
    "from collections import Counter\n",
    "from sklearn.preprocessing import LabelEncoder"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Milestone 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Read in the data\n",
    "data = pd.read_csv('strokedata.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Rename columns to get a cleaner feel on the data set\n",
    "data = data.rename(columns = {'id': 'ID', 'gender': 'Gender', 'age': 'Age', 'hypertension': 'Hypertension',\n",
    "                             'heart_disease': 'Heart_Disease', 'ever_married': 'Married', 'work_type': 'Work',\n",
    "                             'Residence_type': 'Residence', 'avg_glucose_level': 'Glucose', 'bmi': 'BMI',\n",
    "                             'smoking_status': 'Smoking_Status', 'stroke': 'Stroke'}, inplace = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dimensions: (5110, 13)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Heart_Disease</th>\n",
       "      <th>Married</th>\n",
       "      <th>Work</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Glucose</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Smoking_Status</th>\n",
       "      <th>Stroke</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>9046</td>\n",
       "      <td>Male</td>\n",
       "      <td>67.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Private</td>\n",
       "      <td>Urban</td>\n",
       "      <td>228.69</td>\n",
       "      <td>36.6</td>\n",
       "      <td>formerly smoked</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>51676</td>\n",
       "      <td>Female</td>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Self-employed</td>\n",
       "      <td>Rural</td>\n",
       "      <td>202.21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>never smoked</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>31112</td>\n",
       "      <td>Male</td>\n",
       "      <td>80.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Private</td>\n",
       "      <td>Rural</td>\n",
       "      <td>105.92</td>\n",
       "      <td>32.5</td>\n",
       "      <td>never smoked</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>60182</td>\n",
       "      <td>Female</td>\n",
       "      <td>49.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Private</td>\n",
       "      <td>Urban</td>\n",
       "      <td>171.23</td>\n",
       "      <td>34.4</td>\n",
       "      <td>smokes</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1665</td>\n",
       "      <td>Female</td>\n",
       "      <td>79.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Self-employed</td>\n",
       "      <td>Rural</td>\n",
       "      <td>174.12</td>\n",
       "      <td>24.0</td>\n",
       "      <td>never smoked</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0     ID  Gender   Age  Hypertension  Heart_Disease Married  \\\n",
       "0           0   9046    Male  67.0             0              1     Yes   \n",
       "1           1  51676  Female  61.0             0              0     Yes   \n",
       "2           2  31112    Male  80.0             0              1     Yes   \n",
       "3           3  60182  Female  49.0             0              0     Yes   \n",
       "4           4   1665  Female  79.0             1              0     Yes   \n",
       "\n",
       "            Work Residence  Glucose   BMI   Smoking_Status  Stroke  \n",
       "0        Private     Urban   228.69  36.6  formerly smoked       1  \n",
       "1  Self-employed     Rural   202.21   NaN     never smoked       1  \n",
       "2        Private     Rural   105.92  32.5     never smoked       1  \n",
       "3        Private     Urban   171.23  34.4           smokes       1  \n",
       "4  Self-employed     Rural   174.12  24.0     never smoked       1  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Print the dimensions of the df\n",
    "print('Dimensions:',data.shape)\n",
    "# Print the first few rows of the df\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Describe Data:\n",
      "       Unnamed: 0        ID      Age  Hypertension  Heart_Disease  Glucose  \\\n",
      "count     5110.00   5110.00  5110.00        5110.0        5110.00  5110.00   \n",
      "mean      2554.50  36517.83    43.23           0.1           0.05   106.15   \n",
      "std       1475.27  21161.72    22.61           0.3           0.23    45.28   \n",
      "min          0.00     67.00     0.08           0.0           0.00    55.12   \n",
      "25%       1277.25  17741.25    25.00           0.0           0.00    77.24   \n",
      "50%       2554.50  36932.00    45.00           0.0           0.00    91.88   \n",
      "75%       3831.75  54682.00    61.00           0.0           0.00   114.09   \n",
      "max       5109.00  72940.00    82.00           1.0           1.00   271.74   \n",
      "\n",
      "           BMI   Stroke  \n",
      "count  4909.00  5110.00  \n",
      "mean     28.89     0.05  \n",
      "std       7.85     0.22  \n",
      "min      10.30     0.00  \n",
      "25%      23.50     0.00  \n",
      "50%      28.10     0.00  \n",
      "75%      33.10     0.00  \n",
      "max      97.60     1.00  \n",
      "**********************************************************************\n",
      "Summarized Data:\n",
      "        Gender Married     Work Residence Smoking_Status\n",
      "count     5110    5110     5110      5110           5110\n",
      "unique       3       2        5         2              4\n",
      "top     Female     Yes  Private     Urban   never smoked\n",
      "freq      2994    3353     2925      2596           1892\n"
     ]
    }
   ],
   "source": [
    "# Find what types of variables are in the df\n",
    "# Numerical data\n",
    "print(\"Describe Data:\")\n",
    "print(round(data.describe(),2))\n",
    "print(\"*\"*70)\n",
    "# Text data\n",
    "print(\"Summarized Data:\")\n",
    "print(data.describe(include=['O']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set up the figure size\n",
    "plt.rcParams['figure.figsize'] = (20, 5)\n",
    "\n",
    "# Make subplots\n",
    "fig, axes = plt.subplots(nrows = 1, ncols = 2)\n",
    "\n",
    "# X axes, colors and bins\n",
    "x_axes = ['Age', 'Glucose'] # Histograms for the columns Age and Glucose\n",
    "colors = ['powderblue', 'tomato']\n",
    "bins = [40, 10] # Respective bin sizes\n",
    "\n",
    "# Make the graphs\n",
    "axes = axes.ravel()\n",
    "for idx, ax in enumerate(axes):\n",
    "    ax.hist(data[x_axes[idx]].dropna(), bins=bins[idx], color=colors[idx])\n",
    "    ax.set_xlabel(x_axes[idx], fontsize=20)\n",
    "    ax.set_ylabel('Counts', fontsize=20)\n",
    "    ax.tick_params(axis='both', labelsize=15)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram for BMI\n",
    "plt.rcParams['figure.figsize'] = (10, 5)\n",
    "\n",
    "plt.hist(data['BMI'].dropna(), bins=25, color='plum')\n",
    "plt.xlabel('BMI', fontsize=20)\n",
    "plt.ylabel('Counts', fontsize=20)\n",
    "plt.tick_params(axis='both', labelsize=15)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "strokebmi = data.loc[data['Stroke'].dropna() == 1, 'BMI']\n",
    "nonstrokebmi = data.loc[data['Stroke'].dropna() == 0, 'BMI']\n",
    "\n",
    "strokeglucose = data.loc[data['Stroke'].dropna() == 1, 'Glucose']\n",
    "nonstrokeglucose = data.loc[data['Stroke'].dropna() == 0, 'Glucose']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set plot size\n",
    "plt.rcParams['figure.figsize'] = (10, 8)\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot()\n",
    "\n",
    "# Add data to the scatter plot for strokes and nonstrokes\n",
    "plt.scatter(strokebmi, strokeglucose, color='tomato', label='Stroke', s=4)\n",
    "plt.scatter(nonstrokebmi, nonstrokeglucose, color='powderblue', label='No Stroke', s=4)\n",
    "\n",
    "# Labels\n",
    "plt.title('Stroke Scatterplot for BMI vs. Glucose', fontsize=25)\n",
    "plt.xlabel('BMI', fontsize=20)\n",
    "plt.ylabel('Glucose', fontsize=20)\n",
    "plt.legend(loc=1, fontsize=20)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x199b4a7ba90>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x2160 with 8 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set up the figure size\n",
    "plt.rcParams['figure.figsize'] = (20, 30)\n",
    "\n",
    "# Make subplots\n",
    "fig, axes = plt.subplots(nrows = 4, ncols = 2)\n",
    "\n",
    "# GENDER: Make the data read to feed into the visulizer\n",
    "Stroke1 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}})[data['Stroke']==1]['Gender'].value_counts()\n",
    "Stroke0 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}})[data['Stroke']==0]['Gender'].value_counts()\n",
    "Stroke0 = Stroke0.reindex(index=Stroke1.index)\n",
    "\n",
    "# GENDER: Make the bar plot\n",
    "p1 = axes[0, 0].bar(Stroke1.index, Stroke1.values, color='tomato')\n",
    "p2 = axes[0, 0].bar(Stroke0.index, Stroke0.values, color='powderblue', bottom=Stroke1.values)\n",
    "axes[0, 0].set_title('Gender', fontsize=25)\n",
    "axes[0, 0].set_ylabel('Counts', fontsize=20)\n",
    "axes[0, 0].tick_params(axis='both', labelsize=15)\n",
    "axes[0, 0].legend((p1[0], p2[0]), ('Stroke', 'No Stroke'), fontsize = 15)\n",
    "\n",
    "\n",
    "# MARRIED: Make the data read to feed into the visulizer\n",
    "Married1 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}})[data['Stroke']==1]['Married'].value_counts()\n",
    "Married0 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}})[data['Stroke']==0]['Married'].value_counts()\n",
    "Married0 = Married0.reindex(index = Married1.index)\n",
    "\n",
    "# MARRIED: Make the bar plot\n",
    "p3 = axes[0, 1].bar(Married1.index, Married1.values, color='tomato')\n",
    "p4 = axes[0, 1].bar(Married0.index, Married0.values, color='powderblue', bottom=Married1.values)\n",
    "axes[0, 1].set_title('Married', fontsize=25)\n",
    "axes[0, 1].set_ylabel('Counts', fontsize=20)\n",
    "axes[0, 1].tick_params(axis='both', labelsize=15)\n",
    "axes[0, 1].legend((p3[0], p4[0]), ('Stroke', 'No Stroke'), fontsize = 15)\n",
    "\n",
    "\n",
    "# WORK: Make the data read to feed into the visulizer\n",
    "Work1 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}})[data['Stroke']==1]['Work'].value_counts()\n",
    "Work0 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}})[data['Stroke']==0]['Work'].value_counts()\n",
    "Work0 = Work0.reindex(index = Work1.index)\n",
    "\n",
    "# WORK: Make the bar plot\n",
    "p5 = axes[1, 0].bar(Work1.index, Work1.values, color='tomato')\n",
    "p6 = axes[1, 0].bar(Work0.index, Work0.values, color='powderblue', bottom=Work1.values)\n",
    "axes[1, 0].set_title('Work', fontsize=25)\n",
    "axes[1, 0].set_ylabel('Counts', fontsize=20)\n",
    "axes[1, 0].tick_params(axis='both', labelsize=15)\n",
    "axes[1, 0].legend((p5[0], p6[0]), ('Stroke', 'No Stroke'), fontsize = 15)\n",
    "\n",
    "\n",
    "# RESIDENCE: Make the data read to feed into the visulizer\n",
    "Residence1 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}})[data['Stroke']==1]['Residence'].value_counts()\n",
    "Residence0 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}})[data['Stroke']==0]['Residence'].value_counts()\n",
    "Residence0 = Residence0.reindex(index = Residence1.index)\n",
    "\n",
    "# RESIDENCE: Make the bar plot\n",
    "p7 = axes[1, 1].bar(Residence1.index, Residence1.values, color='tomato')\n",
    "p8 = axes[1, 1].bar(Residence0.index, Residence0.values, color='powderblue', bottom=Residence1.values)\n",
    "axes[1, 1].set_title('Residence', fontsize=25)\n",
    "axes[1, 1].set_ylabel('Counts', fontsize=20)\n",
    "axes[1, 1].tick_params(axis='both', labelsize=15)\n",
    "axes[1, 1].legend((p7[0], p8[0]), ('Stroke', 'No Stroke'), fontsize = 15)\n",
    "\n",
    "\n",
    "# SMOKER: Make the data read to feed into the visulizer\n",
    "Smoke1 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}})[data['Stroke']==1]['Smoking_Status'].value_counts()\n",
    "Smoke0 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}})[data['Stroke']==0]['Smoking_Status'].value_counts()\n",
    "Smoke0 = Smoke0.reindex(index = Smoke1.index)\n",
    "\n",
    "# SMOKER: Make the bar plot\n",
    "p9 = axes[2, 0].bar(Smoke1.index, Smoke1.values, color='tomato')\n",
    "p10 = axes[2, 0].bar(Smoke0.index, Smoke0.values, color='powderblue', bottom=Smoke1.values)\n",
    "axes[2, 0].set_title('Smoking Status', fontsize=25)\n",
    "axes[2, 0].set_ylabel('Counts', fontsize=20)\n",
    "axes[2, 0].tick_params(axis='both', labelsize=15)\n",
    "axes[2, 0].legend((p9[0], p10[0]), ('Stroke', 'No Stroke'), fontsize = 15)\n",
    "\n",
    "\n",
    "# HYPERTENSION: Make the data read to feed into the visulizer\n",
    "# Have to replace hypertension numbers (0=no hypertension, 1=hypertension)\n",
    "Hypertension1 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}}).replace({'Hypertension': {0: 'No Hypertension', 1: 'Hypertension'}})[data['Stroke']==1]['Hypertension'].value_counts()\n",
    "Hypertension0 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}}).replace({'Hypertension': {0: 'No Hypertension', 1: 'Hypertension'}})[data['Stroke']==0]['Hypertension'].value_counts()\n",
    "Hypertension0 = Hypertension0.reindex(index = Hypertension1.index)\n",
    "\n",
    "# HYPERTENSION: Make the bar plot\n",
    "p11 = axes[2, 1].bar(Hypertension1.index, Hypertension1.values, color='tomato')\n",
    "p12 = axes[2, 1].bar(Hypertension0.index, Hypertension0.values, color='powderblue', bottom=Hypertension1.values)\n",
    "axes[2, 1].set_title('Hypertension', fontsize=25)\n",
    "axes[2, 1].set_ylabel('Counts', fontsize=20)\n",
    "axes[2, 1].tick_params(axis='both', labelsize=15)\n",
    "axes[2, 1].legend((p11[0], p12[0]), ('Stroke', 'No Stroke'), fontsize = 15)\n",
    "\n",
    "\n",
    "# HEART DISEASE: Make the data read to feed into the visulizer\n",
    "# Have to replace hypertension numbers (0=no heart disease, 1=heart disease)\n",
    "HD1 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}}).replace({'Heart_Disease': {0: 'No Heart Disease', 1: 'Heart Disease'}})[data['Stroke']==1]['Heart_Disease'].value_counts()\n",
    "HD0 = data.replace({'Stroke': {1: 'Stroke', 0: 'No Stroke'}}).replace({'Heart_Disease': {0: 'No Heart Disease', 1: 'Heart Disease'}})[data['Stroke']==0]['Heart_Disease'].value_counts()\n",
    "HD0 = HD0.reindex(index = HD1.index)\n",
    "\n",
    "# HEART DISEASE: Make the bar plot\n",
    "p11 = axes[3, 0].bar(HD1.index, HD1.values, color='tomato')\n",
    "p12 = axes[3, 0].bar(HD0.index, HD0.values, color='powderblue', bottom=HD1.values)\n",
    "axes[3, 0].set_title('Heart Disease', fontsize=25)\n",
    "axes[3, 0].set_ylabel('Counts', fontsize=20)\n",
    "axes[3, 0].tick_params(axis='both', labelsize=15)\n",
    "axes[3, 0].legend((p11[0], p12[0]), ('Stroke', 'No Stroke'), fontsize = 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I liked these graphs a lot better than the originals because they seem easier to interpret. Based on these graphs it looks like males and females are almost equally likely to have strokes, where males may be slightly more likely. Married people seem to have more strokes than non married people because the bar for total married people is about doubled than the non married but the number of strokes in married people seems about 5x the number of strokes in non married people. Working as self employed or for the government might slightly increase the risk, residence area seems to not affect the risk very much, but obviously smoking is a big factor.\n",
    "\n",
    "Each of these graphs reveals just how much each feature can affect the risk of stroke. Obviously there are some things the patients can do to work on a lower stroke risk, by living a more healthy lifestyle they could lower their BMI, and quit smoking to lower their risk. However there are other factors, such as being married that would have an affect on the risk of stroke that would be more difficult to change. I believe in that case in particular, it would be more about moving toward a healthy relationship that lowers stress. Overall, most of these are still factors that could affect the risk of stroke and by using them and a model to predict the likelyhood of a stroke. Then other factors could be adjusted to prevent that happening.\n",
    "\n",
    "# Milestone 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Heart_Disease</th>\n",
       "      <th>Married</th>\n",
       "      <th>Work</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Glucose</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Smoking_Status</th>\n",
       "      <th>Stroke</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>67.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>228.69</td>\n",
       "      <td>36.6</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>202.21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>105.92</td>\n",
       "      <td>32.5</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Gender   Age  Hypertension  Heart_Disease  Married  Work  Residence  \\\n",
       "0     1.0  67.0             0              1      1.0   2.0        1.0   \n",
       "1     0.0  61.0             0              0      1.0   3.0        0.0   \n",
       "2     1.0  80.0             0              1      1.0   2.0        0.0   \n",
       "\n",
       "   Glucose   BMI  Smoking_Status  Stroke  \n",
       "0   228.69  36.6             1.0       1  \n",
       "1   202.21   NaN             2.0       1  \n",
       "2   105.92  32.5             2.0       1  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1= data\n",
    "# Dropping ID and Unnamed column because they contain no relevant data\n",
    "data1 = data1.drop(['Unnamed: 0', 'ID'], axis=1)\n",
    "\n",
    "ord_enc = OrdinalEncoder()\n",
    "\n",
    "# Encode categorical data into numerical for feature analysis and reduction\n",
    "data1['Gender'] = ord_enc.fit_transform(data1[['Gender']])\n",
    "data1['Married'] = ord_enc.fit_transform(data1[['Married']])\n",
    "data1['Work'] = ord_enc.fit_transform(data1[['Work']])\n",
    "data1['Residence'] = ord_enc.fit_transform(data1[['Residence']])\n",
    "data1['Smoking_Status'] = ord_enc.fit_transform(data1[['Smoking_Status']])\n",
    "\n",
    "data1.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Checking and adjusting missing data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender              0\n",
       "Age                 0\n",
       "Hypertension        0\n",
       "Heart_Disease       0\n",
       "Married             0\n",
       "Work                0\n",
       "Residence           0\n",
       "Glucose             0\n",
       "BMI               201\n",
       "Smoking_Status      0\n",
       "Stroke              0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check for missing values\n",
    "data1.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    5110.000000\n",
       "mean       28.893110\n",
       "std         7.698018\n",
       "min        10.300000\n",
       "25%        23.800000\n",
       "50%        28.400000\n",
       "75%        32.800000\n",
       "max        97.600000\n",
       "Name: BMI, dtype: float64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Replace missing values with mean for BMI\n",
    "# Define function\n",
    "def na_mean(data, inplace=True):\n",
    "    return data.fillna(round(data.mean(),2), inplace=inplace)\n",
    "\n",
    "# Fill BMI nan values\n",
    "na_mean(data1['BMI'])\n",
    "\n",
    "data1['BMI'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Recheck\n",
    "data1['BMI'].isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Feature reduction check"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Using Pearson Correlation\n",
    "plt.figure(figsize=(12,10))\n",
    "cor = data1.corr()\n",
    "sns.heatmap(round(cor,1), annot=True, cmap=plt.cm.Blues)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "None of the varaibles are so closely correlated with each other that I'd want to remove them now, for being almost identicle only one would suffice but none are too close. Marriage and age are the two most closely correlated with each other but I'm choosing to keep both because of how they impact the outcome of stroke differently. Obviously age is a major factor when it comes to the possibility of stroke but the stress of marriage or lack thereof can also play a role. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age              0.245257\n",
       "Hypertension     0.127904\n",
       "Heart_Disease    0.134914\n",
       "Married          0.108340\n",
       "Glucose          0.131945\n",
       "Stroke           1.000000\n",
       "Name: Stroke, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Correlation with output variable\n",
    "cor = data1.corr()\n",
    "cor_target = abs(cor[\"Stroke\"])\n",
    "\n",
    "# Selecting highly correlated features\n",
    "relevant_features = cor_target[cor_target>0.04]\n",
    "relevant_features"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Above I tested correlations with the target variable (Stroke) to see which features or columns might be irrelevant if they had close correlations with each other. Then I reviewed the correlations between the features and the target varaible to see which are most highly correlated with Stroke. Gender and residence were the lowest correlated features with the target variable, Stroke."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dropping columns with no relevant data in original dataset\n",
    "data = data.drop(['Unnamed: 0','ID'], axis=1)\n",
    "# Replacing the missing values in data BMI with the mean\n",
    "na_mean(data['BMI'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Adjust skewed data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set up the figure size\n",
    "plt.rcParams['figure.figsize'] = (20, 5)\n",
    "\n",
    "# Make subplots\n",
    "fig, axes = plt.subplots(nrows = 1, ncols = 2)\n",
    "\n",
    "# X axes, colors and bins\n",
    "x_axes = ['Glucose', 'BMI'] # Histograms for the columns Age and Glucose\n",
    "colors = ['powderblue', 'tomato']\n",
    "bins = [40, 30] # Respective bin sizes\n",
    "\n",
    "# Make the graphs\n",
    "axes = axes.ravel()\n",
    "for idx, ax in enumerate(axes):\n",
    "    ax.hist(data[x_axes[idx]].dropna(), bins=bins[idx], color=colors[idx])\n",
    "    ax.set_xlabel(x_axes[idx], fontsize=20)\n",
    "    ax.set_ylabel('Counts', fontsize=20)\n",
    "    ax.tick_params(axis='both', labelsize=15)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we have two variables that are right skewed so I'll adjust them using the logarithms of both of these features for transformation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "def log_transformation(data):\n",
    "    return round(data.apply(np.log),2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Glucose_log'] = log_transformation(data['Glucose'])\n",
    "data['BMI_log'] = log_transformation(data['BMI'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Glucose log histogram\n",
    "plt.rcParams['figure.figsize'] = (10, 5)\n",
    "\n",
    "plt.hist(data['Glucose_log'], bins=40, color='powderblue')\n",
    "plt.title('Glucose Log Distribution', fontsize=25)\n",
    "plt.xlabel('Glucose_log', fontsize=20)\n",
    "plt.ylabel('Counts', fontsize=20)\n",
    "plt.tick_params(axis='both', labelsize=15)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# BMI log histogram\n",
    "plt.rcParams['figure.figsize'] = (10, 5)\n",
    "\n",
    "plt.hist(data['BMI_log'], bins=40, color='tomato')\n",
    "plt.title('BMI Log Distribution', fontsize=25)\n",
    "plt.xlabel('BMI_log', fontsize=20)\n",
    "plt.ylabel('Counts', fontsize=20)\n",
    "plt.tick_params(axis='both', labelsize=15)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Heart_Disease</th>\n",
       "      <th>Married</th>\n",
       "      <th>Work</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Glucose</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Smoking_Status</th>\n",
       "      <th>Stroke</th>\n",
       "      <th>Glucose_log</th>\n",
       "      <th>BMI_log</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Male</td>\n",
       "      <td>67.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Private</td>\n",
       "      <td>Urban</td>\n",
       "      <td>228.69</td>\n",
       "      <td>36.60</td>\n",
       "      <td>formerly smoked</td>\n",
       "      <td>1</td>\n",
       "      <td>5.43</td>\n",
       "      <td>3.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Female</td>\n",
       "      <td>61.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Self-employed</td>\n",
       "      <td>Rural</td>\n",
       "      <td>202.21</td>\n",
       "      <td>28.89</td>\n",
       "      <td>never smoked</td>\n",
       "      <td>1</td>\n",
       "      <td>5.31</td>\n",
       "      <td>3.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>80.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Private</td>\n",
       "      <td>Rural</td>\n",
       "      <td>105.92</td>\n",
       "      <td>32.50</td>\n",
       "      <td>never smoked</td>\n",
       "      <td>1</td>\n",
       "      <td>4.66</td>\n",
       "      <td>3.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>49.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Private</td>\n",
       "      <td>Urban</td>\n",
       "      <td>171.23</td>\n",
       "      <td>34.40</td>\n",
       "      <td>smokes</td>\n",
       "      <td>1</td>\n",
       "      <td>5.14</td>\n",
       "      <td>3.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Female</td>\n",
       "      <td>79.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Self-employed</td>\n",
       "      <td>Rural</td>\n",
       "      <td>174.12</td>\n",
       "      <td>24.00</td>\n",
       "      <td>never smoked</td>\n",
       "      <td>1</td>\n",
       "      <td>5.16</td>\n",
       "      <td>3.18</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Gender   Age  Hypertension  Heart_Disease Married           Work Residence  \\\n",
       "0    Male  67.0             0              1     Yes        Private     Urban   \n",
       "1  Female  61.0             0              0     Yes  Self-employed     Rural   \n",
       "2    Male  80.0             0              1     Yes        Private     Rural   \n",
       "3  Female  49.0             0              0     Yes        Private     Urban   \n",
       "4  Female  79.0             1              0     Yes  Self-employed     Rural   \n",
       "\n",
       "   Glucose    BMI   Smoking_Status  Stroke  Glucose_log  BMI_log  \n",
       "0   228.69  36.60  formerly smoked       1         5.43     3.60  \n",
       "1   202.21  28.89     never smoked       1         5.31     3.36  \n",
       "2   105.92  32.50     never smoked       1         4.66     3.48  \n",
       "3   171.23  34.40           smokes       1         5.14     3.54  \n",
       "4   174.12  24.00     never smoked       1         5.16     3.18  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create dummy variables for categorical data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "# categorical features list\n",
    "data['Married'] = ord_enc.fit_transform(data[['Married']])\n",
    "cat_features = ['Gender', 'Hypertension', 'Heart_Disease', 'Married', 'Work', 'Smoking_Status']\n",
    "data_cat = data[cat_features]\n",
    "\n",
    "# Not necessary to make dummy variables for this as it is already encoded properly\n",
    "#data_cat = data_cat.replace({'Hypertension': {0: 'No', 1: 'Yes'}})\n",
    "#data_cat = data_cat.replace({'Heart_Disease': {0: 'No', 1: 'Yes'}})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_cat_dummies = pd.get_dummies(data_cat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Heart_Disease</th>\n",
       "      <th>Married</th>\n",
       "      <th>Gender_Female</th>\n",
       "      <th>Gender_Male</th>\n",
       "      <th>Gender_Other</th>\n",
       "      <th>Work_Govt_job</th>\n",
       "      <th>Work_Never_worked</th>\n",
       "      <th>Work_Private</th>\n",
       "      <th>Work_Self-employed</th>\n",
       "      <th>Work_children</th>\n",
       "      <th>Smoking_Status_Unknown</th>\n",
       "      <th>Smoking_Status_formerly smoked</th>\n",
       "      <th>Smoking_Status_never smoked</th>\n",
       "      <th>Smoking_Status_smokes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Hypertension  Heart_Disease  Married  Gender_Female  Gender_Male  \\\n",
       "0             0              1      1.0              0            1   \n",
       "1             0              0      1.0              1            0   \n",
       "2             0              1      1.0              0            1   \n",
       "3             0              0      1.0              1            0   \n",
       "4             1              0      1.0              1            0   \n",
       "\n",
       "   Gender_Other  Work_Govt_job  Work_Never_worked  Work_Private  \\\n",
       "0             0              0                  0             1   \n",
       "1             0              0                  0             0   \n",
       "2             0              0                  0             1   \n",
       "3             0              0                  0             1   \n",
       "4             0              0                  0             0   \n",
       "\n",
       "   Work_Self-employed  Work_children  Smoking_Status_Unknown  \\\n",
       "0                   0              0                       0   \n",
       "1                   1              0                       0   \n",
       "2                   0              0                       0   \n",
       "3                   0              0                       0   \n",
       "4                   1              0                       0   \n",
       "\n",
       "   Smoking_Status_formerly smoked  Smoking_Status_never smoked  \\\n",
       "0                               1                            0   \n",
       "1                               0                            1   \n",
       "2                               0                            1   \n",
       "3                               0                            0   \n",
       "4                               0                            1   \n",
       "\n",
       "   Smoking_Status_smokes  \n",
       "0                      0  \n",
       "1                      0  \n",
       "2                      0  \n",
       "3                      1  \n",
       "4                      0  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_cat_dummies.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Milestone 3\n",
    "\n",
    "Below was progress made before dealing with the imbalanced data in the data set. So the work from this milestone was commented out and then later applied to the data after dealing with the imbalanced issue.\n",
    "\n",
    "### Logistic Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # create a whole features dataset that can be used for train and validation data splitting\n",
    "# features_model = ['Age', 'Glucose_log', 'BMI_log']\n",
    "# data_model_X = pd.concat([data[features_model], data_cat_dummies], axis=1)\n",
    "# data_model_X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # create a whole target dataset that can be used for train and validation data splitting\n",
    "# data_model_y = data.replace({'Stroke': {1: 'Stroke', 0: 'No_Stroke'}})['Stroke']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # split the data\n",
    "# X_train, X_test, y_train, y_test = train_test_split(data_model_X, data_model_y, test_size =0.30, random_state=11)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # number of samples in each set\n",
    "# print(\"Number of samples in training set: \", X_train.shape[0])\n",
    "# print(\"Number of samples in validation set:\", X_test.shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # Stroke and no stroke (training set)\n",
    "# print('Number of strokes and non strokes in the training set:')\n",
    "# print(y_train.value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # Survived and not-survived (testing set)\n",
    "# print('Number of strokes and non strokes in the testing set:')\n",
    "# print(y_test.value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# # Instantiate the classification model \n",
    "# model = LogisticRegression(solver='liblinear')\n",
    "\n",
    "# #The ConfusionMatrix visualizer taxes a model\n",
    "# classes = ['No Stroke','Stroke']\n",
    "# cm = ConfusionMatrix(model, classes=classes)\n",
    "\n",
    "# #Fit fits the passed model. This is unnecessary if you pass the visualizer a pre-fitted model\n",
    "# cm.fit(X_train, y_train)\n",
    "\n",
    "# #To create the ConfusionMatrix, we need some test data. Score runs predict() on the data\n",
    "# #and then creates the confusion_matrix from scikit learn.\n",
    "# cm.score(X_test, y_test)\n",
    "\n",
    "# # change fontsize of the labels in the figure\n",
    "# for label in cm.ax.texts:\n",
    "#     label.set_size(20)\n",
    "\n",
    "# #How did we do?\n",
    "# cm.poof()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# # set the size of the figure and the font size \n",
    "# %matplotlib inline\n",
    "# plt.rcParams['figure.figsize'] = (15, 7)\n",
    "# plt.rcParams['font.size'] = 20\n",
    "\n",
    "# # Instantiate the visualizer\n",
    "# visualizer = ClassificationReport(model, classes=classes)\n",
    "\n",
    "# visualizer.fit(X_train, y_train)  # Fit the training data to the visualizer\n",
    "# visualizer.score(X_test, y_test)  # Evaluate the model on the test data\n",
    "# g = visualizer.poof()             # Draw/show/poof the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Short conclusion\n",
    "Obviously logistic regression is not a great machine learning algorithm for the data set, it missed predicting literally any strokes. I'm believing it's primarily because of the lower correlation coefficients between the predictor variables and the target variable. Even though this algorithm is 95% accurate it's still lacking because of all of the strokes it failed to predict."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Decision Tree Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "# object_type_columns = data.select_dtypes(include='object')\n",
    "# le = LabelEncoder()\n",
    "# for title in object_type_columns:\n",
    "#     data[title] = le.fit_transform(data[title])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "# X = data.drop(['Stroke'], axis=1)\n",
    "# y = data['Stroke']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n",
    "# print('absolut values for train set: ', Counter(y_train), sep='\\n')\n",
    "# print()\n",
    "# print('in percents for train set: ', y_train.value_counts(normalize=True).round(2) * 100, sep='\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# DT_clf = tree.DecisionTreeClassifier()\n",
    "# DT_clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "# DT_prediction = DT_clf.predict(X_test)\n",
    "# DT_metrics = metrics.f1_score(y_test, DT_prediction).round(2)\n",
    "# DT_report = metrics.classification_report(y_test, DT_prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "# #The ConfusionMatrix visualizer taxes a model\n",
    "# classes = ['No Stroke','Stroke']\n",
    "# cm = ConfusionMatrix(DT_clf, classes=classes)\n",
    "\n",
    "# #Fit fits the passed model. This is unnecessary if you pass the visualizer a pre-fitted model\n",
    "# cm.fit(X_train, y_train)\n",
    "\n",
    "# #To create the ConfusionMatrix, we need some test data. Score runs predict() on the data\n",
    "# #and then creates the confusion_matrix from scikit learn.\n",
    "# cm.score(X_test, y_test)\n",
    "\n",
    "# # change fontsize of the labels in the figure\n",
    "# for label in cm.ax.texts:\n",
    "#     label.set_size(20)\n",
    "\n",
    "# #How did we do?\n",
    "# cm.poof()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "# print(DT_report)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Short conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "While logistic regression may have a higher accuracy rate I actually like the results from the decision tree more because it caught more of the strokes than logistic regression. Even though there are more false positives I believe in this case it would be better to stick with the lower accuracy but be able to predict more of the strokes. I will try to tune this machine learning algorithm in turn to possibly increase the accuracy. After all at least this ML algorithm predicted strokes at all. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Milestone 4\n",
    "\n",
    "## Dealing with Imbalanced Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of cases with no stroke: 4861\n",
      "Number of cases with a stroke: 249\n"
     ]
    }
   ],
   "source": [
    "# find number of positives and negatives\n",
    "y = data.Stroke\n",
    "\n",
    "df_majority = data[data.Stroke==0]\n",
    "df_minority = data[data.Stroke==1]\n",
    "\n",
    "nclass0 = len(df_majority)\n",
    "print(\"Number of cases with no stroke:\", nclass0)\n",
    "nclass1 = len(df_minority)\n",
    "print(\"Number of cases with a stroke:\", nclass1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see the classes are very imbalanced so I will correct this by downsampling the cases with no stroke. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# pip install imblearn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "# from imblearn.over_sampling import SMOTE\n",
    "\n",
    "# # Resample the minority class. You can change the strategy to 'auto' if you are not sure.\n",
    "# sm = SMOTE(sampling_strategy='minority', random_state=7)\n",
    "\n",
    "# # Fit the model to generate the data.\n",
    "# oversampled_trainX, oversampled_trainY = sm.fit_resample(data.drop('Stroke', axis=1), data['Stroke'])\n",
    "# oversampled_train = pd.concat([pd.DataFrame(oversampled_trainY), pd.DataFrame(oversampled_trainX)], axis=1)\n",
    "# oversampled_train.columns = normalized_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Downsampling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "# downsample the number of negative cases\n",
    "from sklearn.utils import resample\n",
    "df_majority_downsampled = resample(df_majority, \n",
    "                                 replace=False,    # sample without replacement\n",
    "                                 n_samples=249)     # to match minority class"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Heart_Disease</th>\n",
       "      <th>Married</th>\n",
       "      <th>Work</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Glucose</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Smoking_Status</th>\n",
       "      <th>Stroke</th>\n",
       "      <th>Glucose_log</th>\n",
       "      <th>BMI_log</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4959</th>\n",
       "      <td>Female</td>\n",
       "      <td>50.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Self-employed</td>\n",
       "      <td>Urban</td>\n",
       "      <td>62.63</td>\n",
       "      <td>23.40</td>\n",
       "      <td>never smoked</td>\n",
       "      <td>0</td>\n",
       "      <td>4.14</td>\n",
       "      <td>3.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3323</th>\n",
       "      <td>Female</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>children</td>\n",
       "      <td>Rural</td>\n",
       "      <td>98.90</td>\n",
       "      <td>18.80</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>4.59</td>\n",
       "      <td>2.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4468</th>\n",
       "      <td>Female</td>\n",
       "      <td>43.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Private</td>\n",
       "      <td>Urban</td>\n",
       "      <td>71.77</td>\n",
       "      <td>26.90</td>\n",
       "      <td>never smoked</td>\n",
       "      <td>0</td>\n",
       "      <td>4.27</td>\n",
       "      <td>3.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3420</th>\n",
       "      <td>Male</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>children</td>\n",
       "      <td>Urban</td>\n",
       "      <td>84.50</td>\n",
       "      <td>15.80</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>4.44</td>\n",
       "      <td>2.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1272</th>\n",
       "      <td>Male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Private</td>\n",
       "      <td>Urban</td>\n",
       "      <td>89.53</td>\n",
       "      <td>30.20</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>4.49</td>\n",
       "      <td>3.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>Male</td>\n",
       "      <td>57.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Private</td>\n",
       "      <td>Rural</td>\n",
       "      <td>84.96</td>\n",
       "      <td>36.70</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>1</td>\n",
       "      <td>4.44</td>\n",
       "      <td>3.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>Female</td>\n",
       "      <td>14.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>children</td>\n",
       "      <td>Rural</td>\n",
       "      <td>57.93</td>\n",
       "      <td>30.90</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>1</td>\n",
       "      <td>4.06</td>\n",
       "      <td>3.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>Female</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Self-employed</td>\n",
       "      <td>Rural</td>\n",
       "      <td>78.80</td>\n",
       "      <td>29.30</td>\n",
       "      <td>formerly smoked</td>\n",
       "      <td>1</td>\n",
       "      <td>4.37</td>\n",
       "      <td>3.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>Male</td>\n",
       "      <td>71.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Self-employed</td>\n",
       "      <td>Rural</td>\n",
       "      <td>87.80</td>\n",
       "      <td>28.89</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>1</td>\n",
       "      <td>4.48</td>\n",
       "      <td>3.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>Female</td>\n",
       "      <td>78.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Private</td>\n",
       "      <td>Rural</td>\n",
       "      <td>78.81</td>\n",
       "      <td>19.60</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>1</td>\n",
       "      <td>4.37</td>\n",
       "      <td>2.98</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>498 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Gender   Age  Hypertension  Heart_Disease  Married           Work  \\\n",
       "4959  Female  50.0             0              0      1.0  Self-employed   \n",
       "3323  Female   8.0             0              0      0.0       children   \n",
       "4468  Female  43.0             0              0      0.0        Private   \n",
       "3420    Male   5.0             0              0      0.0       children   \n",
       "1272    Male  22.0             0              0      0.0        Private   \n",
       "...      ...   ...           ...            ...      ...            ...   \n",
       "244     Male  57.0             0              0      1.0        Private   \n",
       "245   Female  14.0             0              0      0.0       children   \n",
       "246   Female  75.0             0              0      1.0  Self-employed   \n",
       "247     Male  71.0             1              0      1.0  Self-employed   \n",
       "248   Female  78.0             0              0      1.0        Private   \n",
       "\n",
       "     Residence  Glucose    BMI   Smoking_Status  Stroke  Glucose_log  BMI_log  \n",
       "4959     Urban    62.63  23.40     never smoked       0         4.14     3.15  \n",
       "3323     Rural    98.90  18.80          Unknown       0         4.59     2.93  \n",
       "4468     Urban    71.77  26.90     never smoked       0         4.27     3.29  \n",
       "3420     Urban    84.50  15.80          Unknown       0         4.44     2.76  \n",
       "1272     Urban    89.53  30.20          Unknown       0         4.49     3.41  \n",
       "...        ...      ...    ...              ...     ...          ...      ...  \n",
       "244      Rural    84.96  36.70          Unknown       1         4.44     3.60  \n",
       "245      Rural    57.93  30.90          Unknown       1         4.06     3.43  \n",
       "246      Rural    78.80  29.30  formerly smoked       1         4.37     3.38  \n",
       "247      Rural    87.80  28.89          Unknown       1         4.48     3.36  \n",
       "248      Rural    78.81  19.60          Unknown       1         4.37     2.98  \n",
       "\n",
       "[498 rows x 13 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# new data frame with less data points\n",
    "ds_df = pd.concat([df_majority_downsampled, df_minority])\n",
    "ds_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Logistic Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "dsdata_cat = ds_df[cat_features]\n",
    "data_cat_dummies = pd.get_dummies(dsdata_cat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Glucose_log</th>\n",
       "      <th>BMI_log</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Heart_Disease</th>\n",
       "      <th>Married</th>\n",
       "      <th>Gender_Female</th>\n",
       "      <th>Gender_Male</th>\n",
       "      <th>Work_Govt_job</th>\n",
       "      <th>Work_Never_worked</th>\n",
       "      <th>Work_Private</th>\n",
       "      <th>Work_Self-employed</th>\n",
       "      <th>Work_children</th>\n",
       "      <th>Smoking_Status_Unknown</th>\n",
       "      <th>Smoking_Status_formerly smoked</th>\n",
       "      <th>Smoking_Status_never smoked</th>\n",
       "      <th>Smoking_Status_smokes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4959</th>\n",
       "      <td>50.0</td>\n",
       "      <td>4.14</td>\n",
       "      <td>3.15</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3323</th>\n",
       "      <td>8.0</td>\n",
       "      <td>4.59</td>\n",
       "      <td>2.93</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4468</th>\n",
       "      <td>43.0</td>\n",
       "      <td>4.27</td>\n",
       "      <td>3.29</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3420</th>\n",
       "      <td>5.0</td>\n",
       "      <td>4.44</td>\n",
       "      <td>2.76</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1272</th>\n",
       "      <td>22.0</td>\n",
       "      <td>4.49</td>\n",
       "      <td>3.41</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Age  Glucose_log  BMI_log  Hypertension  Heart_Disease  Married  \\\n",
       "4959  50.0         4.14     3.15             0              0      1.0   \n",
       "3323   8.0         4.59     2.93             0              0      0.0   \n",
       "4468  43.0         4.27     3.29             0              0      0.0   \n",
       "3420   5.0         4.44     2.76             0              0      0.0   \n",
       "1272  22.0         4.49     3.41             0              0      0.0   \n",
       "\n",
       "      Gender_Female  Gender_Male  Work_Govt_job  Work_Never_worked  \\\n",
       "4959              1            0              0                  0   \n",
       "3323              1            0              0                  0   \n",
       "4468              1            0              0                  0   \n",
       "3420              0            1              0                  0   \n",
       "1272              0            1              0                  0   \n",
       "\n",
       "      Work_Private  Work_Self-employed  Work_children  Smoking_Status_Unknown  \\\n",
       "4959             0                   1              0                       0   \n",
       "3323             0                   0              1                       1   \n",
       "4468             1                   0              0                       0   \n",
       "3420             0                   0              1                       1   \n",
       "1272             1                   0              0                       1   \n",
       "\n",
       "      Smoking_Status_formerly smoked  Smoking_Status_never smoked  \\\n",
       "4959                               0                            1   \n",
       "3323                               0                            0   \n",
       "4468                               0                            1   \n",
       "3420                               0                            0   \n",
       "1272                               0                            0   \n",
       "\n",
       "      Smoking_Status_smokes  \n",
       "4959                      0  \n",
       "3323                      0  \n",
       "4468                      0  \n",
       "3420                      0  \n",
       "1272                      0  "
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a whole features dataset that can be used for train and validation data splitting\n",
    "features_model = ['Age', 'Glucose_log', 'BMI_log']\n",
    "data_model_X = pd.concat([ds_df[features_model], data_cat_dummies], axis=1)\n",
    "data_model_X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "# create a whole target dataset that can be used for train and validation data splitting\n",
    "data_model_y = ds_df.replace({'Stroke': {1: 'Stroke', 0: 'No_Stroke'}})['Stroke']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "# split the data\n",
    "X_train, X_test, y_train, y_test = train_test_split(data_model_X, data_model_y, test_size =0.25, random_state=27)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of samples in training set:  373\n",
      "Number of samples in validation set: 125\n"
     ]
    }
   ],
   "source": [
    "# number of samples in each set\n",
    "print(\"Number of samples in training set: \", X_train.shape[0])\n",
    "print(\"Number of samples in validation set:\", X_test.shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of strokes and non strokes in the training set:\n",
      "No_Stroke    190\n",
      "Stroke       183\n",
      "Name: Stroke, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Stroke and no stroke (training set)\n",
    "print('Number of strokes and non strokes in the training set:')\n",
    "print(y_train.value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of strokes and non strokes in the testing set:\n",
      "Stroke       66\n",
      "No_Stroke    59\n",
      "Name: Stroke, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Survived and not-survived (testing set)\n",
    "print('Number of strokes and non strokes in the testing set:')\n",
    "print(y_test.value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'LogisticRegression Confusion Matrix'}, xlabel='Predicted Class', ylabel='True Class'>"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Instantiate the classification model \n",
    "model = LogisticRegression(solver='liblinear')\n",
    "\n",
    "#The ConfusionMatrix visualizer taxes a model\n",
    "classes = ['No Stroke','Stroke']\n",
    "cm = ConfusionMatrix(model, classes=classes)\n",
    "\n",
    "#Fit fits the passed model. This is unnecessary if you pass the visualizer a pre-fitted model\n",
    "cm.fit(X_train, y_train)\n",
    "\n",
    "#To create the ConfusionMatrix, we need some test data. Score runs predict() on the data\n",
    "#and then creates the confusion_matrix from scikit learn.\n",
    "cm.score(X_test, y_test)\n",
    "\n",
    "# change fontsize of the labels in the figure\n",
    "for label in cm.ax.texts:\n",
    "    label.set_size(20)\n",
    "\n",
    "#How did we do?\n",
    "cm.poof()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\laura\\anaconda3\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# set the size of the figure and the font size \n",
    "%matplotlib inline\n",
    "plt.rcParams['figure.figsize'] = (15, 7)\n",
    "plt.rcParams['font.size'] = 20\n",
    "\n",
    "# Instantiate the visualizer\n",
    "visualizer = ClassificationReport(model, classes=classes)\n",
    "\n",
    "visualizer.fit(X_train, y_train)  # Fit the training data to the visualizer\n",
    "visualizer.score(X_test, y_test)  # Evaluate the model on the test data\n",
    "g = visualizer.poof()             # Draw/show/poof the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Decision Tree Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "object_type_columns = ds_df.select_dtypes(include='object')\n",
    "le = LabelEncoder()\n",
    "for title in object_type_columns:\n",
    "    ds_df[title] = le.fit_transform(ds_df[title])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "# separate the target variable\n",
    "X = ds_df.drop(['Stroke'], axis=1)\n",
    "y = ds_df['Stroke']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "absolut values for train set: \n",
      "Counter({0: 190, 1: 183})\n",
      "\n",
      "in percents for train set: \n",
      "0    51.0\n",
      "1    49.0\n",
      "Name: Stroke, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "# splitting into training and testing groups\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.25, random_state=27)\n",
    "print('absolut values for train set: ', Counter(y_train), sep='\\n')\n",
    "print()\n",
    "print('in percents for train set: ', y_train.value_counts(normalize=True).round(2) * 100, sep='\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier()"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DT_clf = tree.DecisionTreeClassifier()\n",
    "DT_clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "DT_prediction = DT_clf.predict(X_test)\n",
    "DT_metrics = metrics.f1_score(y_test, DT_prediction).round(2)\n",
    "DT_report = metrics.classification_report(y_test, DT_prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\laura\\anaconda3\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1080x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'DecisionTreeClassifier Confusion Matrix'}, xlabel='Predicted Class', ylabel='True Class'>"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#The ConfusionMatrix visualizer taxes a model\n",
    "classes = ['No Stroke','Stroke']\n",
    "cm = ConfusionMatrix(DT_clf, classes=classes)\n",
    "\n",
    "#Fit fits the passed model. This is unnecessary if you pass the visualizer a pre-fitted model\n",
    "cm.fit(X_train, y_train)\n",
    "\n",
    "#To create the ConfusionMatrix, we need some test data. Score runs predict() on the data\n",
    "#and then creates the confusion_matrix from scikit learn.\n",
    "cm.score(X_test, y_test)\n",
    "\n",
    "# change fontsize of the labels in the figure\n",
    "for label in cm.ax.texts:\n",
    "    label.set_size(20)\n",
    "\n",
    "#How did we do?\n",
    "cm.poof()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.68      0.61      0.64        59\n",
      "           1       0.68      0.74      0.71        66\n",
      "\n",
      "    accuracy                           0.68       125\n",
      "   macro avg       0.68      0.68      0.68       125\n",
      "weighted avg       0.68      0.68      0.68       125\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(DT_report)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now the the imbalanced issue is dealt with, working toward tuning the machine learning algorithm will be slightly easier. The logistic regression algorithm is no longer predicting 0 strokes which is a good sign. For the next milestone I will try tuning the algorithms to increase precision of the target variable."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Milestone 5\n",
    "\n",
    "## Random Forrest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import preprocessing \n",
    "from sklearn.linear_model import BayesianRidge\n",
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Glucose_log</th>\n",
       "      <th>BMI_log</th>\n",
       "      <th>Hypertension</th>\n",
       "      <th>Heart_Disease</th>\n",
       "      <th>Married</th>\n",
       "      <th>Gender_Female</th>\n",
       "      <th>Gender_Male</th>\n",
       "      <th>Work_Govt_job</th>\n",
       "      <th>Work_Never_worked</th>\n",
       "      <th>Work_Private</th>\n",
       "      <th>Work_Self-employed</th>\n",
       "      <th>Work_children</th>\n",
       "      <th>Smoking_Status_Unknown</th>\n",
       "      <th>Smoking_Status_formerly smoked</th>\n",
       "      <th>Smoking_Status_never smoked</th>\n",
       "      <th>Smoking_Status_smokes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>67.0</td>\n",
       "      <td>5.43</td>\n",
       "      <td>3.60</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>61.0</td>\n",
       "      <td>5.31</td>\n",
       "      <td>3.36</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>80.0</td>\n",
       "      <td>4.66</td>\n",
       "      <td>3.48</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>49.0</td>\n",
       "      <td>5.14</td>\n",
       "      <td>3.54</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>79.0</td>\n",
       "      <td>5.16</td>\n",
       "      <td>3.18</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Age  Glucose_log  BMI_log  Hypertension  Heart_Disease  Married  \\\n",
       "0  67.0         5.43     3.60           0.0            1.0      1.0   \n",
       "1  61.0         5.31     3.36           0.0            0.0      1.0   \n",
       "2  80.0         4.66     3.48           0.0            1.0      1.0   \n",
       "3  49.0         5.14     3.54           0.0            0.0      1.0   \n",
       "4  79.0         5.16     3.18           1.0            0.0      1.0   \n",
       "\n",
       "   Gender_Female  Gender_Male  Work_Govt_job  Work_Never_worked  Work_Private  \\\n",
       "0            0.0          1.0            0.0                0.0           1.0   \n",
       "1            1.0          0.0            0.0                0.0           0.0   \n",
       "2            0.0          1.0            0.0                0.0           1.0   \n",
       "3            1.0          0.0            0.0                0.0           1.0   \n",
       "4            1.0          0.0            0.0                0.0           0.0   \n",
       "\n",
       "   Work_Self-employed  Work_children  Smoking_Status_Unknown  \\\n",
       "0                 0.0            0.0                     0.0   \n",
       "1                 1.0            0.0                     0.0   \n",
       "2                 0.0            0.0                     0.0   \n",
       "3                 0.0            0.0                     0.0   \n",
       "4                 1.0            0.0                     0.0   \n",
       "\n",
       "   Smoking_Status_formerly smoked  Smoking_Status_never smoked  \\\n",
       "0                             1.0                          0.0   \n",
       "1                             0.0                          1.0   \n",
       "2                             0.0                          1.0   \n",
       "3                             0.0                          0.0   \n",
       "4                             0.0                          1.0   \n",
       "\n",
       "   Smoking_Status_smokes  \n",
       "0                    0.0  \n",
       "1                    0.0  \n",
       "2                    0.0  \n",
       "3                    1.0  \n",
       "4                    0.0  "
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a whole features dataset that can be used for train and validation data splitting\n",
    "features_model = ['Age', 'Glucose_log', 'BMI_log']\n",
    "data_model_X = pd.concat([data[features_model], data_cat_dummies], axis=1)\n",
    "data_model_X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "# create a whole target dataset that can be used for train and validation data splitting\n",
    "data_model_y = data.replace({'Stroke': {1: 'Stroke', 0: 'No_Stroke'}})['Stroke']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train set: (348, 12) (348,)\n",
      "Test set: (150, 12) (150,)\n"
     ]
    }
   ],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=4)\n",
    "print ('Train set:', X_train.shape,  y_train.shape)\n",
    "print ('Test set:', X_test.shape,  y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import classification_report, confusion_matrix\n",
    "import itertools\n",
    "from sklearn.metrics import f1_score\n",
    "def plot_confusion_matrix(cm, classes,\n",
    "                          normalize=False,\n",
    "                          title='Confusion matrix',\n",
    "                          cmap=plt.cm.Blues):\n",
    "\n",
    "    if normalize:\n",
    "        cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n",
    "        print(\"Normalized confusion matrix\")\n",
    "    else:\n",
    "        print('Confusion matrix, without normalization')\n",
    "\n",
    "    print(cm)\n",
    "    plt.figure(figsize=(5,4))\n",
    "    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n",
    "    plt.title(title)\n",
    "    plt.colorbar()\n",
    "    tick_marks = np.arange(len(classes))\n",
    "    plt.xticks(tick_marks, classes, rotation=45)\n",
    "    plt.yticks(tick_marks, classes)\n",
    "\n",
    "    fmt = '.2f' if normalize else 'd'\n",
    "    thresh = cm.max() / 2.\n",
    "    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n",
    "        plt.text(j, i, format(cm[i, j], fmt),\n",
    "                 horizontalalignment=\"center\",\n",
    "                 color=\"white\" if cm[i, j] > thresh else \"black\")\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.ylabel('True label')\n",
    "    plt.xlabel('Predicted label')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random Forest Train Score: 0.9885057471264368\n",
      "Random Forest Test Score: 0.7\n",
      "[0 0 0 1 1]\n"
     ]
    }
   ],
   "source": [
    "RF = RandomForestClassifier( max_depth= 10, random_state=0, n_estimators=10)\n",
    "RFF = RF.fit(X_train, y_train)\n",
    "#Get the Score of Random Forest Classifier both Train and Test\n",
    "RFM_Train = RF.score(X_train, y_train)\n",
    "RFM_Test = RF.score(X_test, y_test)\n",
    "print('Random Forest Train Score: ' + str(RFM_Train))\n",
    "print('Random Forest Test Score: ' + str(RFM_Test))\n",
    "#Predict value of RFM\n",
    "RFM_pred = RF.predict(X_test)\n",
    "print(RFM_pred[0:5])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.74      0.65      0.69        78\n",
      "           1       0.67      0.75      0.71        72\n",
      "\n",
      "    accuracy                           0.70       150\n",
      "   macro avg       0.70      0.70      0.70       150\n",
      "weighted avg       0.70      0.70      0.70       150\n",
      "\n",
      "Confusion matrix, without normalization\n",
      "[[51 27]\n",
      " [18 54]]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 1080x504 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import f1_score\n",
    "f1_score(y_test, RFM_pred, average='weighted') \n",
    "# Compute confusion matrix  \n",
    "RFM_matrix = confusion_matrix(y_test, RFM_pred)\n",
    "np.set_printoptions(precision=2)\n",
    "\n",
    "print (classification_report(y_test, RFM_pred))\n",
    "\n",
    "# Plot non-normalized confusion matrix\n",
    "plt.figure()\n",
    "plot_confusion_matrix(RFM_matrix, classes=['No Stroke','Stroke'],normalize= False,  title='Random Forest Confusion matrix')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
